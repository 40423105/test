<<<<<<< HEAD
var tipuesearch = {"pages":[{"title":"About","text":"個人倉儲 個人投影片 個人blog","url":"./pages/about/","tags":"misc"},{"title":"成品網頁展示","text":"1.成品網頁展示 window.onload = function(){ var madeleine = new Madeleine({ target: 'target', // target div id data: './../final/fourbar/ALL.stl', // data path path: './../work/madeleine/src/' // path to source directory from current html file }); }; 由於零件檔案過大,需等待幾秒","url":"./cheng-pin-wang-ye-zhan-shi.html","tags":"行走機構"},{"title":"繪製坐標軸","text":"網頁上繪製坐標軸 window.onload=function(){ // 設定 data/py 為共用程式路徑 brython({debug:1, pythonpath:['./../data/py']}); } from browser import document as doc import math # deg 為角度轉為徑度的轉換因子 deg = math.pi/180. # 定義 Spur 類別 class Spur(object): def __init__(self, ctx): self.ctx = ctx # 設定畫線參數 def create_line1(self, x1, y1, x2, y2, width=3, fill=\"red\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() def create_line2(self, x1, y1, x2, y2, width=3, fill=\"green\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() def create_line3(self, x1, y1, x2, y2, width=3, fill=\"black\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() def Gear(self, midx, midy, rp, n=20, pa=20, color=\"black\"): rp = 250 imax = 15 m=2*rp/n a=m d=1.25*m ra=rp+a # self.create_line(起點X, 起點Y, 終點X, 終點Y) # 畫出黑色外框 self.create_line3(0, 0, 0, 800) self.create_line3(0, 800, 800, 800) self.create_line3(800, 800, 800, 0) self.create_line3(800, 0, 0, 0) self.create_line3(21.13, 16.62, 133, 16.62) self.create_line3(21.13, 16.62, 21.13, 120) self.create_line3(21.13, 120, 17, 115) self.create_line3(21.13, 16.62, 21.13, 120) self.create_line3(21.13, 120, 21, 115) self.create_line3(21.13, 120, 21, 115) self.create_line1(350, 20, 350, 220) self.create_line1(350, 220, 450, 220) self.create_line1(450, 220, 450, 20) self.create_line1(450, 20, 350, 20) self.create_line2(350, 70, 200, 70) self.create_line2(200, 70, 200, 44.3) self.create_line2(200, 44.3, 100, 44.3) self.create_line2(100, 44.3, 100, 494.3) self.create_line2(100, 494.3, 50, 494.3) self.create_line2(50, 494.3, 50, 578.7) self.create_line2(50, 578.7, 86.5, 591.7) self.create_line2(86.5, 591.7, 123.8, 599.8) self.create_line2(123.8, 599.8, 162, 604.3) self.create_line2(162, 604.3, 202, 604.3) self.create_line2(202, 604.3, 202, 494.3) self.create_line2(202, 494.3, 152, 494.3) self.create_line2(152, 494.3, 152, 144.3) self.create_line2(152, 144.3, 202, 144.3) self.create_line2(202, 144.3, 202, 118.6) self.create_line2(202, 118.6, 352, 118.6) self.create_line2(450, 70, 600, 70) self.create_line2(600, 70, 600, 44.3) self.create_line2(600, 44.3, 700, 44.30) self.create_line2(700, 44.3, 700, 494.3) self.create_line2(700, 494.3, 750, 494.3) self.create_line2(750, 494.3, 750, 578.7) self.create_line2(750, 578.7, 713.5, 591.7) self.create_line2(713.5, 591.7, 676.2, 599.8) self.create_line2(676.2, 599.8, 638, 604.3) self.create_line2(638, 604.3, 598, 604.3) self.create_line2(598, 604.3, 598, 494.3) self.create_line2(598, 494.3, 648, 494.3) self.create_line2(648, 494.3, 648, 144.3) self.create_line2(648, 144.3, 598, 144.3) self.create_line2(598, 144.3, 598, 118.6) self.create_line2(598, 118.6, 448, 118.6) if rd>rb: dr = (ra-rd)/imax else: dr=(ra-rb)/imax sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg for j in range(-9, 10, +1): ang=-2.*j*math.pi/n+sigma ang2=2.*j*math.pi/n+sigma lxd=midx+rd*math.sin(ang2-2.*math.pi/n) lyd=midy-rd*math.cos(ang2-2.*math.pi/n) for i in range(imax+1): if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(alpha-ang) ypt=r*math.cos(alpha-ang) xd=rd*math.sin(-ang) yd=rd*math.cos(-ang) if(i==0): last_x = midx+xd last_y = midy-yd self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color) for i in range(imax+1): if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(ang2-alpha) ypt=r*math.cos(ang2-alpha) xd=rd*math.sin(ang2) yd=rd*math.cos(ang2) if(i==0): last_x = midx+xd last_y = midy-yd self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) if(i==imax): rfx=midx+xpt rfy=midy-ypt last_x = midx+xpt last_y = midy-ypt self.create_line(lfx,lfy,rfx,rfy,fill=color) canvas = doc['onegear3'] ctx = canvas.getContext(\"2d\") x = (canvas.width)/2 y = (canvas.height)/2 r = 0.8*(canvas.height/2) # 齒數 n = 36 # 壓力角 pa = 20 Spur(ctx).Gear(x, y, r, n, pa, \"blue\")","url":"./hui-zhi-zuo-biao-zhou.html","tags":"W17"}]};
=======
var tipuesearch = {"pages":[{"title":"About","tags":"misc","text":"個人倉儲 個人投影片 個人blog","url":"./pages/about/"},{"title":"成品網頁展示","tags":"行走機構","text":"1.成品網頁展示 window.onload = function(){ var madeleine = new Madeleine({ target: 'target', // target div id data: './../final/fourbar/ALL.stl', // data path path: './../work/madeleine/src/' // path to source directory from current html file }); }; 由於零件檔案過大,需等待幾秒","url":"./cheng-pin-wang-ye-zhan-shi.html"}]};
>>>>>>> 1d79e561a3fdb056d58311346fcb147b7bf415c5
